name: Release
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-RC[0-9]+"
permissions:
  contents: write
jobs:
  docker-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [ { name: manager, context: . }, { name: manager, context: . }, { name: web, context: ./web } ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.ACCESS_TOKEN }}
      - name: Build and push ${{ matrix.service.name }} image
        uses: docker/build-push-action@v4
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: ${{ matrix.service.context }}
          file: ./${{ matrix.service.name }}/Dockerfile
          platforms: |
            linux/amd64
            linux/arm64
            linux/arm/v7
          tags: |
            ghcr.io/ptrvsrg/crack-hash:${{ matrix.service.name }}-${{ github.ref_name }}
          labels: |
            org.opencontainers.image.title=${{ github.repository }}
            org.opencontainers.image.description=Crack Hash - ${{ matrix.service.name }}
            org.opencontainers.image.url=https://github.com/ptrvsrg/crack-hash
            org.opencontainers.image.source=https://github.com/ptrvsrg/crack-hash
            org.opencontainers.image.version=${{ github.ref_name }}
            org.opencontainers.image.created=${{ github.run_started_at }}
            org.opencontainers.image.revision=${{ github.sha }}
          build-args: |
            ARTIFACT_VERSION=${{ github.ref_name }}
          push: true
  goreleaser:
    needs: docker-build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.2'
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}