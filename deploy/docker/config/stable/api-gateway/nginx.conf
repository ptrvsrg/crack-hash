user nginx;

worker_processes auto;

events {
    worker_connections 1024;
}

http {
    upstream mongo-express {
        least_conn;
        server crack-hash-stable-mongo-express-1:8081;
    }

    upstream rabbitmq {
        least_conn;
        server crack-hash-stable-rabbitmq1-1:15672;
        server crack-hash-stable-rabbitmq2-1:15672;
        server crack-hash-stable-rabbitmq3-1:15672;
    }

    upstream managers {
        least_conn;
        server crack-hash-stable-manager-1:8080;
    }

    upstream workers {
        least_conn;
        server crack-hash-stable-worker-1:8080;
        server crack-hash-stable-worker-2:8080;
        server crack-hash-stable-worker-3:8080;
    }

    server {
        server_tokens off;
        listen 80;

        http2 on;

        gzip            on;
        gzip_vary       on;
        gzip_http_version  1.0;
        gzip_comp_level 5;
        gzip_types
                       application/atom+xml
                        application/javascript
                        application/json
                        application/rss+xml
                        application/vnd.ms-fontobject
                        application/x-font-ttf
                        application/x-web-app-manifest+json
                        application/xhtml+xml
                        application/xml
                        font/opentype
                        image/svg+xml
                        image/x-icon
                        text/css
                        text/plain
                        text/x-component;
        gzip_proxied    no-cache no-store private expired auth;
        gzip_min_length 256;

        location ^~ /internal {
            deny all;
        }

        location /services/mongo-express {
            proxy_pass http://mongo-express/services/mongo-express;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /services/rabbitmq {
            proxy_pass http://rabbitmq/services/rabbitmq;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location ~ ^/services/rabbitmq-(\d+)$ {
             resolver 127.0.0.1 [::1];
             set $upstream crack-hash-stable-rabbitmq$1-1:15672;

             proxy_pass http://$upstream;
             proxy_set_header Host $host;
             proxy_set_header X-Real-IP $remote_addr;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
             proxy_set_header X-Forwarded-Proto $scheme;
         }

        location /services/manager {
            rewrite /services/manager(.*) $1 break;

            proxy_pass       http://managers/;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location ~ ^/services/manager-(\d)$ {
            set $manager_replica $1;

            proxy_pass http://crack-hash-stable-manager-${manager_replica}:8080;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /services/worker {
            rewrite /services/worker(.*) $1 break;

            proxy_pass       http://workers/;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location ~ ^/services/worker-(\d)$ {
            set $worker_replica $1;

            proxy_pass http://crack-hash-stable-worker-${worker_replica}:8080;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /services/gateway/status {
            stub_status on;
            allow 127.0.0.1;
            deny all;
        }
    }
}