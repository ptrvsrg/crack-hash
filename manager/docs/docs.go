// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Petrov Sergey",
            "email": "s.petrov1@g.nsu.ru"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/manager/hash/crack": {
            "post": {
                "description": "Request for create new hash crack task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hash Crack API"
                ],
                "summary": "Create new hash crack task",
                "operationId": "HashCrack",
                "parameters": [
                    {
                        "description": "Hash crack task input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.HashCrackTaskInput"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/model.HashCrackTaskIDOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorOutput"
                        }
                    }
                }
            }
        },
        "/api/manager/hash/crack/status": {
            "get": {
                "description": "Request for getting status of hash crack task",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hash Crack API"
                ],
                "summary": "Get status of hash crack task",
                "operationId": "CheckHashCrackStatus",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hash crack task ID",
                        "name": "requestID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.HashCrackTaskStatusOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorOutput"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorOutput"
                        }
                    }
                }
            }
        },
        "/api/manager/health/liveness": {
            "get": {
                "description": "Request for getting health liveness.",
                "tags": [
                    "Health API"
                ],
                "summary": "Health liveness",
                "operationId": "healthLiveness",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/manager/health/readiness": {
            "get": {
                "description": "Request for getting health readiness. In response will be status of all check (database, cache, message queue).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health API"
                ],
                "summary": "Health readiness",
                "operationId": "healthReadiness",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorOutput"
                        }
                    }
                }
            }
        },
        "/api/manager/swagger/api-docs.json": {
            "get": {
                "description": "Request for getting swagger specification in JSON",
                "produces": [
                    "application/json; charset=utf-8"
                ],
                "tags": [
                    "Swagger API"
                ],
                "summary": "Swagger JSON",
                "operationId": "SwaggerJSON",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/manager/swagger/index.html": {
            "get": {
                "description": "Request for getting swagger UI",
                "produces": [
                    "text/html; charset=utf-8"
                ],
                "tags": [
                    "Swagger API"
                ],
                "summary": "Swagger UI",
                "operationId": "SwaggerUI",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/internal/api/manager/hash/crack/webhook": {
            "post": {
                "description": "Request for getting status of hash crack task",
                "consumes": [
                    "application/xml"
                ],
                "produces": [
                    "application/xml"
                ],
                "tags": [
                    "Hash Crack API"
                ],
                "summary": "Get status of hash crack task",
                "operationId": "HashCrackTaskWebhook",
                "parameters": [
                    {
                        "description": "Hash crack task webhook input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.HashCrackTaskWebhookInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorOutput"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.ErrorOutput": {
            "type": "object",
            "required": [
                "message",
                "path",
                "status",
                "timestamp"
            ],
            "properties": {
                "message": {
                    "type": "string"
                },
                "path": {
                    "type": "string",
                    "format": "url_path",
                    "example": "/api/v0/example"
                },
                "status": {
                    "type": "integer",
                    "maximum": 599,
                    "minimum": 400
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "model.HashCrackTaskIDOutput": {
            "type": "object",
            "properties": {
                "requestId": {
                    "type": "string"
                }
            }
        },
        "model.HashCrackTaskInput": {
            "type": "object",
            "required": [
                "hash",
                "maxLength"
            ],
            "properties": {
                "hash": {
                    "type": "string"
                },
                "maxLength": {
                    "type": "integer",
                    "maximum": 6,
                    "minimum": 0
                }
            }
        },
        "model.HashCrackTaskStatus": {
            "type": "string",
            "enum": [
                "IN_PROGRESS",
                "READY",
                "ERROR",
                "UNKNOWN"
            ],
            "x-enum-varnames": [
                "HashCrackStatusInProgress",
                "HashCrackStatusReady",
                "HashCrackStatusError",
                "HashCrackStatusUnknown"
            ]
        },
        "model.HashCrackTaskStatusOutput": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "$ref": "#/definitions/model.HashCrackTaskStatus"
                }
            }
        },
        "model.HashCrackTaskWebhookInput": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "object",
                    "properties": {
                        "words": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "partNumber": {
                    "type": "integer"
                },
                "requestID": {
                    "type": "string"
                }
            }
        }
    },
    "tags": [
        {
            "description": "API for cracking hashes and checking results",
            "name": "Hash Crack API"
        },
        {
            "description": "API for health checks",
            "name": "Health API"
        },
        {
            "description": "API for getting swagger specification",
            "name": "Swagger API"
        }
    ],
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.0.0",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Crack Hash Manager API",
	Description:      "API for Crack Hash Manager",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
